import React, { useEffect, useState } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import {getOrderById, getOrderReport} from '../../services/api';
import GetUploadLink from '../../components/GetUploadLink';
import { AxiosResponse } from 'axios';
import { OrderStatus } from '../../enums';

interface Product {
  name: string;
  price?: number;
  wb_price?: number;
  payment_time: string;
  tg_nick: string;            // –±–µ–∑ "@"
  image_path: string;
}

interface Order {
  id: string;
  product: Product;
  card_number?: string;
  phone_number?: string;
  bank?: string;
  name?: string;
  status: OrderStatus;
  transaction_code: string;
  created_at: string;
  seller: User
}

interface User {
    nickname: string
}


interface OrderReport {
    step: number;
    search_screenshot_path?: string;
    cart_screenshot_path?: string;
    card_number?: string;
    phone_number?: string;
    name?: string;
    bank?: string;
    final_cart_screenshot_path?: string;
    delivery_screenshot_path?: string;
    barcodes_screenshot_path?: string;
    review_screenshot_path?: string;
    receipt_screenshot_path?: string;
    receipt_number?: string;
    article?: string;
}

export default function FinalDealPage() {
  const { orderId } = useParams<{ orderId: string }>();
  const [order, setOrder] = useState<Order | null>(null);
  const [loading, setLoading] = useState(true);
  const navigate = useNavigate();
  const [reportData, setReportData] = useState<OrderReport | null>(null);
  const [showReport, setShowReport] = useState(false);
  const [expandedSteps, setExpandedSteps] = useState<Record<number, boolean>>({});

  const toggleStep = (step: number) => {
      setExpandedSteps(prev => ({...prev, [step]: !prev[step]}));
  };

  useEffect(() => {
    if (!orderId) return;
    getOrderById(orderId)
      .then((res: AxiosResponse<Order>) => setOrder(res.data))
      .catch(() => {})
      .finally(() => setLoading(false));
  }, [orderId]);

    useEffect(() => {
      if (!orderId) return;
      getOrderReport(orderId)
          .then((response: AxiosResponse<OrderReport>) => {
              setReportData(response.data);
          })
          .catch((err) => {
              console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç—á–µ—Ç–∞:', err);
          });
  }, [orderId]);

  if (loading) return <div className="fixed inset-0 z-50 flex items-center justify-center">
                <div className="h-10 w-10 rounded-full border-4 border-gray-300 border-t-gray-600 always-spin"/>
            </div>;
  if (!order) return <div className="p-4 text-red-600">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ</div>;

  const { product } = order;
  const price   = product.price   ?? 0;
  const wbPrice  = product.wb_price ?? 0;
  const cashback = wbPrice - price;

    // —Ç–µ–ø–µ—Ä—å TS –∑–Ω–∞–µ—Ç, —á—Ç–æ order —Ç–æ—á–Ω–æ –Ω–µ null
  const statusText =
    order.status === OrderStatus.CASHBACK_PAID     ? '–í—ã–ø–ª–∞—á–µ–Ω –∫–µ—à–±—ç–∫'
  : order.status === OrderStatus.CASHBACK_NOT_PAID ? '–ö–µ—à–±—ç–∫ –Ω–µ –≤—ã–ø–ª–∞—á–µ–Ω'
  : order.status === OrderStatus.CANCELLED         ? '–û—Ç–º–µ–Ω—ë–Ω'
  : order.status === OrderStatus.PAYMENT_CONFIRMED ? '–û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞'
  :                                                   '';

  const formatDate = (iso: string) =>
    new Date(iso).toLocaleDateString('ru-RU', { day: '2-digit', month: '2-digit', year: 'numeric' });



  return (
    <div className="p-4 bg-gray-200 max-w-screen-md mx-auto space-y-4">

      {/* 1. –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="bg-white border border-brand p-4 rounded-md text-sm space-y-2">
        <p className="items-center font-bold text-lg">
          <span className="mr-2">‚úÖ</span>
          –í–∞—à –æ—Ç—á—ë—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø—Ä–æ–¥–∞–≤—Ü—É!
        </p>
        <p>–°–ø–∞—Å–∏–±–æ! –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∏ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø—Ä–æ–¥–∞–≤—Ü—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.</p>
        <p>–ù–∏–∂–µ ‚Äî –≤–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–∞—Ö:</p>
      </div>

      {/* 2. –†–µ–∫–≤–∏–∑–∏—Ç—ã */}
      <div className="bg-white border border-brand p-4 rounded-md text-sm space-y-1">
        <p className="font-bold">üí≥ –í–∞—à–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –≤—ã–ø–ª–∞—Ç—ã:</p>
        <p><strong>–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã:</strong> {order.card_number || '‚Äî'}</p>
        <p><strong>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</strong> {order.phone_number || '‚Äî'}</p>
        <p><strong>–ë–∞–Ω–∫:</strong> {order.bank || '‚Äî'}</p>
        <p><strong>–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</strong> {order.name || '‚Äî'}</p>
      </div>

      {/* 3. –ß—Ç–æ –±—É–¥–µ—Ç –¥–∞–ª—å—à–µ */}
      <div className="bg-white border border-brand p-4 rounded-md text-sm space-y-1">
        <p className="font-bold">‚è±Ô∏è –ß—Ç–æ –±—É–¥–µ—Ç –¥–∞–ª—å—à–µ:</p>
        <p>–ü—Ä–æ–¥–∞–≤–µ—Ü –ø—Ä–æ–≤–µ—Ä–∏—Ç –≤–∞—à –æ—Ç—á—ë—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ <strong>1‚Äì7 –¥–Ω–µ–π</strong>.</p>
        <p>–í—ã–ø–ª–∞—Ç–∞ –∫–µ—à–±—ç–∫–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ <strong>–≤ —Ç–µ—á–µ–Ω–∏–µ 7 –¥–Ω–µ–π</strong> –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏.</p>
        <p>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã–ø–ª–∞—Ç–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –≤ –±–æ—Ç–µ.</p>
      </div>

      {/* 4. –ù–∞–ø–æ–º–∏–Ω–∞–µ–º */}
      <div className="bg-white border border-brand p-4 rounded-md text-sm space-y-1">
        <p className="font-bold">üõ°Ô∏è –ù–∞–ø–æ–º–∏–Ω–∞–µ–º:</p>
        <p><strong>–ë–æ—Ç –Ω–µ –≤—ã–ø–ª–∞—á–∏–≤–∞–µ—Ç –∫–µ—à–±—ç–∫ –∏ –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ –¥–µ–Ω–µ–∂–Ω—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–∞—Ö.</strong></p>
        <p>–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –≤—ã–ø–ª–∞—Ç—ã –Ω–µ—Å—ë—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–æ–¥–∞–≤–µ—Ü.</p>
        <p>–ï—Å–ª–∏ –∫–µ—à–±—ç–∫ –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —Å—Ä–æ–∫ ‚Äî <strong>—Å–Ω–∞—á–∞–ª–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º</strong> –≤ Telegram.</p>
        <p>–ï—Å–ª–∏ –ø—Ä–æ–¥–∞–≤–µ—Ü –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç –Ω–∞ —Å–≤—è–∑—å –∏–ª–∏ –µ—Å—Ç—å –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–µ –Ω–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ ‚Äî <strong>—Å–æ–æ–±—â–∏—Ç–µ –Ω–∞–º:</strong></p>
        <p>
          üîß{' '}
          <a
            href={process.env.REACT_APP_SUPPORT_URL}
            target="_blank"
            rel="noreferrer"
            className="underline"
          >
            –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞
          </a>
        </p>
        <p>
          <a
            href="https://t.me/Premiumcashb/1153"
            target="_blank"
            rel="noreferrer"
            className="underline"
          >
            üì¢ –ì—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
          </a>
        </p>
      </div>

{/* 5. –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è */}
<div className="bg-white border border-brand p-4 rounded-md text-sm space-y-1">
  <p className="font-bold">üßæ –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è:</p>
  <p>–¢–æ–≤–∞—Ä: <strong>{product.name}</strong></p>
  <p>–¶–µ–Ω–∞ –≤—ã–∫—É–ø–∞: <strong>{price} ‚ÇΩ</strong></p>
  <p>–ö–µ—à–±—ç–∫: <strong>{cashback} ‚ÇΩ</strong></p>
  <p>–í—ã–ø–ª–∞—Ç–∞: <strong>{product.payment_time}</strong></p>
  <p>–°—Ç–∞—Ç—É—Å: <strong>{statusText}</strong></p>
  <p>
    –ü—Ä–æ–¥–∞–≤–µ—Ü:{' '}
    <a
      href={`https://t.me/${order.seller.nickname}`}
      target="_blank"
      rel="noreferrer"
      className="font-medium underline"
    >
      @{order.seller.nickname}
    </a>
  </p>
  <p>
    –î–∞—Ç–∞ —Å–¥–µ–ª–∫–∏ –ø–æ –≤—ã–∫—É–ø—É —Ç–æ–≤–∞—Ä–∞: <strong>{formatDate(order.created_at)}</strong>
  </p>
  <p>–ö–æ–¥ —Å–¥–µ–ª–∫–∏: <strong>{order.transaction_code}</strong></p>
</div>


      {/* 6. –û—Ç–∑—ã–≤ */}
      <div className="bg-white border border-brand p-4 rounded-md text-sm space-y-2">
        <p className="font-bold">üí¨ –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –æ—Ç–∑—ã–≤–æ–º:</p>
        <p>–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –ø—Ä–æ—à–ª–∞ –≤–∞—à–∞ —Å–¥–µ–ª–∫–∞, –ø–æ–º–æ–≥–∏—Ç–µ –¥—Ä—É–≥–∏–º –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ üëá</p>
        <p>
          <a
            href="https://t.me/Premiumcashb/8"
            target="_blank"
            rel="noreferrer"
            className="underline"
          >
            –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –æ—Ç–∑—ã–≤–æ–º –≤ —á–∞—Ç–µ
          </a>
        </p>
      </div>

      {/* 7. –°–ø–∞—Å–∏–±–æ */}
      <div className="bg-white border border-brand p-4 rounded-md text-sm space-y-1">
        <p className="font-bold">üëå –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å Premium Cash Back!</p>
        <p>–ú—ã –¥–µ–ª–∞–µ–º –ø–æ–∫—É–ø–∫–∏ –≤—ã–≥–æ–¥–Ω–µ–µ ‚Äî –≤–º–µ—Å—Ç–µ üíú</p>
      </div>
      <div className="flex flex-col space-y-2">
                <button
                    onClick={() => setShowReport(prev => !prev)}
                className="bg-white border border-darkGray rounded-lg p-3 text-sm font-semibold flex items-center justify-center"
                >
                    {showReport ? '–°–∫—Ä—ã—Ç—å –æ—Ç—á–µ—Ç' : '–û—Ç–∫—Ä—ã—Ç—å –æ—Ç—á–µ—Ç'}
                </button>


                {showReport && (
                    <div className="bg-white rounded-lg shadow p-4 mb-4">
                                                    <h3 className="text-lg font-bold mb-2">–û—Ç—á—ë—Ç –ø–æ —Å–¥–µ–ª–∫–µ –≤—ã–∫—É–ø–∞ —Ç–æ–≤–∞—Ä–∞</h3>
                            {reportData ? (
                                    <div className="space-y-2">
                                        {/* –®–∞–≥ 1 */}
                                        <div className="bg-white rounded-lg shadow">
                                            <button
                                                onClick={() => toggleStep(1)}
                                                className="w-full flex justify-between items-center p-4 text-left"
                                            >
                                                <span className="font-semibold">–®–∞–≥ 1. –°–∫—Ä–∏–Ω—à–æ—Ç—ã –ø–æ–∏—Å–∫–∞ –∏ –∫–æ—Ä–∑–∏–Ω—ã</span>
                                                <svg
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    className={`w-5 h-5 transform transition-transform ${
                                                        expandedSteps[1] ? 'rotate-180' : ''
                                                    }`}
                                                    fill="none"
                                                    viewBox="0 0 24 24"
                                                    stroke="currentColor"
                                                >
                                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2}
                                                          d="M19 9l-7 7-7-7"/>
                                                </svg>
                                            </button>
                                            {expandedSteps[1] && (
                                                <div className="border-t p-4 space-y-3">
                                                    {reportData.search_screenshot_path && (
                                                        <div>
                                                            <p className="text-sm font-semibold">–°–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ WB
                                                            </p>
                                                            <img
                                                                src={GetUploadLink(reportData.search_screenshot_path)}
                                                                alt="–°–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ WB"
                                                                className="mt-1 w-full rounded"
                                                            />
                                                        </div>
                                                    )}
                                                    {reportData.cart_screenshot_path && (
                                                        <div>
                                                            <p className="text-sm font-semibold">–°–∫—Ä–∏–Ω—à–æ—Ç –∫–æ—Ä–∑–∏–Ω—ã –≤ WB</p>
                                                            <img
                                                                src={GetUploadLink(reportData.cart_screenshot_path)}
                                                                alt="–°–∫—Ä–∏–Ω—à–æ—Ç –∫–æ—Ä–∑–∏–Ω—ã –≤ WB"
                                                                className="mt-1 w-full rounded"
                                                            />
                                                        </div>
                                                    )}
                                                </div>
                                            )}
                                        </div>

                                        {/* –®–∞–≥ 2 */}
                                        <div className="bg-white rounded-lg shadow">
                                            <button
                                                onClick={() => toggleStep(2)}
                                                className="w-full flex justify-between items-center p-4 text-left"
                                            >
                                                <span className="font-semibold"> –®–∞–≥ 2. –ê—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞</span>
                                                <svg
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    className={`w-5 h-5 transform transition-transform ${
                                                        expandedSteps[2] ? 'rotate-180' : ''
                                                    }`}
                                                    fill="none"
                                                    viewBox="0 0 24 24"
                                                    stroke="currentColor"
                                                >
                                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2}
                                                          d="M19 9l-7 7-7-7"/>
                                                </svg>
                                            </button>
                                            {expandedSteps[2] && (
                                                <div className="border-t p-4">
                                                    <p className="text-sm">{reportData.article}</p>
                                                </div>
                                            )}
                                        </div>

                                        {/* –®–∞–≥ 3 */}
                                        <div className="bg-white rounded-lg shadow">
                                            <button
                                                onClick={() => toggleStep(3)}
                                                className="w-full flex justify-between items-center p-4 text-left"
                                            >
                                                <span className="font-semibold">–®–∞–≥ 3. –¢–æ–≤–∞—Ä –∏ –±—Ä–µ–Ω–¥ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ</span>
                                                <svg
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    className={`w-5 h-5 transform transition-transform ${
                                                        expandedSteps[3] ? 'rotate-180' : ''
                                                    }`}
                                                    fill="none"
                                                    viewBox="0 0 24 24"
                                                    stroke="currentColor"
                                                >
                                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2}
                                                          d="M19 9l-7 7-7-7"/>
                                                </svg>
                                            </button>
                                            {expandedSteps[3] && (
                                                <div className="border-t p-4">
                                                    <p className="text-sm">–î–æ–±–∞–≤–ª–µ–Ω—ã</p>
                                                </div>
                                            )}
                                        </div>

                                        {/* –®–∞–≥ 4 */}
                                        <div className="bg-white rounded-lg shadow">
                                            <button
                                                onClick={() => toggleStep(4)}
                                                className="w-full flex justify-between items-center p-4 text-left"
                                            >
                                                <span className="font-semibold">–®–∞–≥ 4. –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞
                                            –∫–µ—à–±—ç–∫–∞</span>
                                                <svg
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    className={`w-5 h-5 transform transition-transform ${
                                                        expandedSteps[4] ? 'rotate-180' : ''
                                                    }`}
                                                    fill="none"
                                                    viewBox="0 0 24 24"
                                                    stroke="currentColor"
                                                >
                                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2}
                                                          d="M19 9l-7 7-7-7"/>
                                                </svg>
                                            </button>
                                            {expandedSteps[4] && (
                                                <div className="border-t p-4 space-y-1">
                                                    {reportData.card_number &&
                                                        <p className="text-sm">–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: {reportData.card_number}</p>}
                                                    {reportData.phone_number &&
                                                        <p className="text-sm">–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {reportData.phone_number}</p>}
                                                    {reportData.name && <p className="text-sm">–ü–æ–ª—É—á–∞—Ç–µ–ª—å: {reportData.name}</p>}
                                                    {reportData.bank && <p className="text-sm">–ë–∞–Ω–∫: {reportData.bank}</p>}
                                                </div>
                                            )}
                                        </div>

                                        {/* –®–∞–≥ 5 */}
                                        <div className="bg-white rounded-lg shadow">
                                            <button
                                                onClick={() => toggleStep(5)}
                                                className="w-full flex justify-between items-center p-4 text-left"
                                            >
                                                <span className="font-semibold">–®–∞–≥ 5. –°–∫—Ä–∏–Ω—à–æ—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞</span>
                                                <svg
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    className={`w-5 h-5 transform transition-transform ${
                                                        expandedSteps[5] ? 'rotate-180' : ''
                                                    }`}
                                                    fill="none"
                                                    viewBox="0 0 24 24"
                                                    stroke="currentColor"
                                                >
                                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2}
                                                          d="M19 9l-7 7-7-7"/>
                                                </svg>
                                            </button>
                                            {expandedSteps[5] && reportData.final_cart_screenshot_path && (
                                                <div className="border-t p-4">
                                                    <p className="text-sm font-semibold">–°–∫—Ä–∏–Ω—à–æ—Ç –∑–∞–∫–∞–∑–∞ –Ω–∞ WB</p>
                                                    <img
                                                        src={GetUploadLink(reportData.final_cart_screenshot_path)}
                                                        alt="–§–∏–Ω–∞–ª—å–Ω—ã–π –°–∫—Ä–∏–Ω—à–æ—Ç –∫–æ—Ä–∑–∏–Ω—ã –≤ WB"
                                                        className="w-full rounded"
                                                    />
                                                </div>
                                            )}
                                        </div>

                                        {/* –®–∞–≥ 6 */}
                                        <div className="bg-white rounded-lg shadow">
                                            <button
                                                onClick={() => toggleStep(6)}
                                                className="w-full flex justify-between items-center p-4 text-left"
                                            >
                                                <span className="font-semibold">–®–∞–≥ 6. –°–∫—Ä–∏–Ω—à–æ—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ —à—Ç—Ä–∏—Ö–∫–æ–¥–∞</span>
                                                <svg
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    className={`w-5 h-5 transform transition-transform ${
                                                        expandedSteps[6] ? 'rotate-180' : ''
                                                    }`}
                                                    fill="none"
                                                    viewBox="0 0 24 24"
                                                    stroke="currentColor"
                                                >
                                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2}
                                                          d="M19 9l-7 7-7-7"/>
                                                </svg>
                                            </button>
                                            {expandedSteps[6] && (
                                                <div className="border-t p-4 space-y-3">
                                                    {reportData.delivery_screenshot_path && (
                                                        <div>
                                                            <p className="text-sm font-semibold">1. –°–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ "–î–æ—Å—Ç–∞–≤–∫–∏" –Ω–∞ WB</p>
                                                            <img
                                                                src={GetUploadLink(reportData.delivery_screenshot_path)}
                                                                alt="–°–∫—Ä–∏–Ω –¥–æ—Å—Ç–∞–≤–∫–∏"
                                                                className="mt-1 w-full rounded"
                                                            />
                                                        </div>
                                                    )}
                                                    {reportData.barcodes_screenshot_path && (
                                                        <div>
                                                            <p className="text-sm font-semibold">2. –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —Ä–∞–∑—Ä–µ–∑–∞–Ω–Ω–æ–≥–æ —à—Ç—Ä–∏—Ö–∫–æ–¥–∞ –Ω–∞ —Ñ–æ–Ω–µ —Ç–æ–≤–∞—Ä–∞</p>
                                                            <img
                                                                src={GetUploadLink(reportData.barcodes_screenshot_path)}
                                                                alt="–°–∫—Ä–∏–Ω —à—Ç—Ä–∏—Ö–∫–æ–¥–æ–≤"
                                                                className="mt-1 w-full rounded"
                                                            />
                                                        </div>
                                                    )}
                                                </div>
                                            )}
                                        </div>

                                        <div className="bg-white rounded-lg shadow">
                                    <button
                                        onClick={() => toggleStep(7)}
                                        className="w-full flex justify-between items-center p-4 text-left"
                                    >
                                        <span className="font-semibold">–®–∞–≥ 7. –°–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–∑—ã–≤–∞ –∏ —ç–ª.—á–µ–∫–∞</span>
                                        <svg
                                            xmlns="http://www.w3.org/2000/svg"
                                            className={`w-5 h-5 transform transition-transform ${
                                                expandedSteps[7] ? 'rotate-180' : ''
                                            }`}
                                            fill="none"
                                            viewBox="0 0 24 24"
                                            stroke="currentColor"
                                        >
                                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2}
                                                  d="M19 9l-7 7-7-7"/>
                                        </svg>
                                    </button>
                                    {expandedSteps[7] && (
                                        <div className="border-t p-4 space-y-3">
                                            {reportData.review_screenshot_path && (
                                                <div>
                                                    <p className="text-sm font-semibold">–°–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–∑—ã–≤–∞ —Ç–æ–≤–∞—Ä–∞ –≤ WB

                                                    </p>
                                                    <img
                                                        src={GetUploadLink(reportData.review_screenshot_path)}
                                                        alt="–°–∫—Ä–∏–Ω –æ—Ç–∑—ã–≤–∞"
                                                        className="mt-1 w-full rounded"
                                                    />
                                                </div>
                                            )}
                                            {reportData.receipt_screenshot_path && (
                                                <div>
                                                    <p className="text-sm font-semibold">–°–∫—Ä–∏–Ω—à–æ—Ç —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ —á–µ–∫–∞ –∑–∞–∫–∞–∑–∞ –≤ WB</p>
                                                    <img
                                                        src={GetUploadLink(reportData.receipt_screenshot_path)}
                                                        alt="–°–∫—Ä–∏–Ω —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ —á–µ–∫–∞"
                                                        className="mt-1 w-full rounded"
                                                    />
                                                </div>
                                            )}
                                            {reportData.receipt_number && (
                                                <div>
                                                    <p className="text-sm font-semibold">–ù–æ–º–µ—Ä —á–µ–∫–∞</p>
                                                    <p className="text-sm">{reportData.receipt_number}</p>
                                                </div>
                                            )}

                                        </div>
                                    )}
                                </div>
                            </div>
                        ) :
                                <p className="text-sm text-gray-500">–û—Ç—á–µ—Ç –ø–æ–∫–∞ –ø—É—Å—Ç.</p>
                        }
                    </div>

                )}
      <button
        onClick={() => navigate('/')}
        className="w-full bg-white border border-darkGray rounded-lg p-3 text-sm font-semibold"
      >
        –ù–∞ –≥–ª–∞–≤–Ω—É—é
      </button>

    </div>
            </div>



    );
}