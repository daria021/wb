import React, {useEffect, useRef, useState} from 'react';
import {useLocation, useNavigate, useParams} from 'react-router-dom';
import {createOrder, getProductById} from '../../services/api';
import {useUser} from '../../contexts/user';
import {AxiosResponse} from 'axios';
import FileUploader from "../../components/FileUploader";
import {VideoOverlay} from '../../App';

interface Product {
    id: string;
    article: string;
    key_word: string;
    seller_id: string;
}

function CartScreenshotPage() {
    const {productId} = useParams<{ productId: string }>();
    const navigate = useNavigate();

    const [product, setProduct] = useState<Product | null>(null);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState('');

    const [file1, setFile1] = useState<File | null>(null);
    const [preview1, setPreview1] = useState<string | null>(null);

    const [file2, setFile2] = useState<File | null>(null);
    const [preview2, setPreview2] = useState<string | null>(null);
    const {user, loading: userLoading} = useUser();
    const location = useLocation();
    const cameFromOrders = Boolean(location.state?.fromOrders);
    const handleHomeClick = () => navigate('/');
    const [showReport, setShowReport] = useState(false);
    const [openSrc, setOpenSrc] = useState<string | null>(null);
    const videoRef = useRef<HTMLVideoElement>(null);

    useEffect(() => {
        if (!file1) {
            setPreview1(null);
            return;
        }
        const url = URL.createObjectURL(file1);
        setPreview1(url);
        return () => URL.revokeObjectURL(url);
    }, [file1]);

    // —Å–æ–∑–¥–∞—ë–º preview URL –¥–ª—è file2
    useEffect(() => {
        if (!file2) {
            setPreview2(null);
            return;
        }
        const url = URL.createObjectURL(file2);
        setPreview2(url);
        return () => URL.revokeObjectURL(url);
    }, [file2]);

    const canContinue = Boolean(file1 && file2);

    useEffect(() => {
        if (file2) {
            const url = URL.createObjectURL(file2);
            setPreview2(url);
            return () => URL.revokeObjectURL(url);
        }
        setPreview2(null);
    }, [file2]);


    useEffect(() => {
        if (!productId) return;
        getProductById(productId)
            .then((response: AxiosResponse<Product>) => {
                setProduct(response.data);
            })
            .catch((err) => {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–æ–≤–∞—Ä–∞:', err);
                setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ');
            })
            .finally(() => setLoading(false));
    }, [productId]);

    const handleContinue = async () => {
        if (!canContinue) return;
        try {
            if (!user) return;              // –µ—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è –∏–ª–∏ –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
            const formData = new FormData();
            formData.append('user_id', user.id);

            formData.append('step', '1');
            formData.append('seller_id', product!.seller_id);
            formData.append('product_id', productId || '');
            formData.append('search_query_screenshot', file1 as File);
            formData.append('cart_screenshot', file2 as File);

            const response = await createOrder(formData);
            const createdOrderId = response.data; // –û–∂–∏–¥–∞–µ—Ç—Å—è, —á—Ç–æ backend –≤–µ—Ä–Ω–µ—Ç –æ–±—ä–µ–∫—Ç –∑–∞–∫–∞–∑–∞ —Å –ø–æ–ª–µ–º id

            navigate(`/order/${createdOrderId}/step-2`);
        } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞', err);
        }
    };

    if (loading) {
        return <div className="p-4">–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
    }
    if (error || !product) {
        return <div className="p-4 text-red-600">{error || '–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω'}</div>;
    }

    const handleSupportClick = () => {
        if (window.Telegram?.WebApp?.close) {
            window.Telegram.WebApp.close();
        }
        window.open(process.env.REACT_APP_SUPPORT_URL, '_blank');
    };


    if (userLoading) {
        return <div className="p-4">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è‚Ä¶</div>;
    }

    const videos = [
        {
            id: 1,
            title: 'üé• –ü–æ—è—Å–Ω–µ–Ω–∏–µ, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –Ω–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ.',
            src: 'https://storage.googleapis.com/images_avocado/VideoCashback/2%20Buyer%20Step%201%20Explanation%20of%20what%20needs%20to%20be%20done%2C%20transition%20to%20the%20website.MP4',
        },
        {
            id: 2,
            title: 'üé• –ö–∞–∫ –∏—Å–∫–∞—Ç—å —Ç–æ–≤–∞—Ä –≤—ã–∫—É–ø–∞ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É –Ω–∞ WB –∏ —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç—ã. –í–∞–∂–Ω–æ! –ù–µ –∏—â–∏—Ç–µ —Ç–æ–≤–∞—Ä –ø—Ä–æ–¥–∞–≤—Ü–∞ –∏–∑ –∫–µ—à–±—ç–∫-–±–æ—Ç–∞ –Ω–∞ —ç—Ç–æ–º —ç—Ç–∞–ø–µ.',
            src: 'https://storage.googleapis.com/images_avocado/VideoCashback/3%20Buyer%20Step%201%20Search%20for%20a%20product%20by%20keyword%20in%20the%20WB%2C%20take%20screenshots%2C%20and%20return%20to%20the%20bot.MP4',
        },
        {
            id: 3,
            title: 'üé• –ö–∞–∫ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –≤ –∫–µ—à–±—ç–∫-–±–æ—Ç',
            src: 'https://storage.googleapis.com/images_avocado/VideoCashback/4%20Buyer%20Step%201%20Uploading%20screenshots%2C%20moving%20on%20to%20Step%202.MP4',
        },
    ];

    return (
        <div className="p-4 max-w-screen-md bg-gray-200 mx-auto space-y-4 relative">
            {cameFromOrders && (
                <div className="bg-green-50 border-l-4 border-green-500 text-green-800 p-4 mb-6 rounded">
                    <p className="font-semibold">
                        –í—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å –Ω–∞ –ø–µ—Ä–≤–æ–º —à–∞–≥–µ.
                    </p>
                    <p>–ú–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–∫—É–ø.</p>
                </div>
            )}
            <div className="bg-white border border-brand rounded-lg shadow p-4 text-sm text-gray-700 space-y-2">

                <h2 className="text-lg font-semibold top-10 text-brand">–®–∞–≥ 1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–∞</h2>

                <p>1) –ù–∞–π–¥–∏—Ç–µ —Ç–æ–≤–∞—Ä –≤—ã–∫—É–ø–∞ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É –≤ –ø–æ–∏—Å–∫–µ –Ω–∞ —Å–∞–π—Ç–µ –∏–ª–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ WB. –°–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç
                    –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ WB.</p>
                <p>2) –î–æ–±–∞–≤—å—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ (—Ä–∞–∑–Ω—ã—Ö –±—Ä–µ–Ω–¥–æ–≤) –≤ –∫–æ—Ä–∑–∏–Ω—É WB. –°–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –∫–æ—Ä–∑–∏–Ω—ã –≤
                    WB. <strong>–í–∞–∂–Ω–æ!</strong> –ù–µ –∏—â–∏—Ç–µ —Ç–æ–≤–∞—Ä –ø—Ä–æ–¥–∞–≤—Ü–∞ –∏–∑ –∫–µ—à–±—ç–∫-–±–æ—Ç–∞ –Ω–∞ —ç—Ç–æ–º —ç—Ç–∞–ø–µ.</p>
                <p>3) –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –≤ –æ—Ç—á–µ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–µ—à–±—ç–∫–∞.</p>

                <p>
                    –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞: <strong>{product.key_word}</strong>
                </p>
            </div>


            <FileUploader
                label="1.–°–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ WB"
                file={file1}
                preview={preview1}
                onFileChange={setFile1}
            />
            <FileUploader
                label="2.–°–∫—Ä–∏–Ω—à–æ—Ç –∫–æ—Ä–∑–∏–Ω—ã –≤ WB"
                file={file2}
                preview={preview2}
                onFileChange={setFile2}
            />


            <button
                onClick={handleContinue}
                disabled={!canContinue}
                className={`w-full py-2 rounded-lg text-brand font-semibold ${
                    canContinue ? 'bg-brand hover:bg-brand text-white' : 'bg-gray-200-400 border border-brand cursor-not-allowed'
                }`}
            >
                –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
            </button>

            <div className="space-y-4">

                {videos.map(({id, title, src}) => (
                    <div key={id} className="bg-white rounded-lg shadow p-4">
                        <button
                            className="text-base font-medium mb-2 block text-blue-600 hover:underline"
                            onClick={() => setOpenSrc(src)}
                        >
                            {title}
                        </button>
                    </div>
                ))}

                <div className="flex flex-col gap-3 mt-4">
                    <button
                        onClick={() => setShowReport(prev => !prev)}
                        className="bg-white border border-darkGray rounded-lg p-3 text-sm font-semibold flex items-center justify-center"
                    >
                        {showReport ? '–°–∫—Ä—ã—Ç—å –æ—Ç—á–µ—Ç' : '–û—Ç–∫—Ä—ã—Ç—å –æ—Ç—á–µ—Ç'}
                    </button>

                    {showReport && (
                        <div className="bg-white rounded-lg shadow p-4 mb-4">
                            <h3 className="text-lg font-bold mb-2">–û—Ç—á–µ—Ç</h3>

                            <div className="bg-white rounded-lg shadow p-4 mt-4 space-y-2 text-sm">
                                <div className="font-semibold text-gray-400">–®–∞–≥1. –°–∫—Ä–∏–Ω—ã –∫–æ—Ä–∑–∏–Ω—ã
                                </div>
                                <div className="font-semibold text-gray-400">–®–∞–≥ 2. –ù–∞–π–¥–∏—Ç–µ –Ω–∞—à —Ç–æ–≤–∞—Ä
                                </div>
                                <div className="font-semibold text-gray-400">–®–∞–≥ 3. –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
                                </div>
                                <div className="font-semibold text-gray-400">–®–∞–≥ 4. –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∫–µ—à–±—ç–∫–∞
                                </div>
                                <div className="font-semibold text-gray-400">–®–∞–≥ 5. –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</div>
                                <div className="font-semibold text-gray-400">–®–∞–≥ 6. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞</div>
                                <div className="font-semibold text-gray-400">–®–∞–≥ 7. –û—Ç–∑—ã–≤</div>
                            </div>


                        </div>


                    )}
                    <button
                        onClick={() => navigate('/instruction')}
                        className="bg-white border border-darkGray rounded-lg p-3 text-sm font-semibold">
                        <span>–ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –≤—ã–∫—É–ø–∞ —Ç–æ–≤–∞—Ä–∞</span>
                    </button>


                    <button
                        onClick={handleSupportClick}
                        className="bg-white border border-darkGray rounded-lg p-3 text-sm font-semibold">
                        –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º —à–∞–≥–∞
                    </button>


                    <button
                        onClick={handleHomeClick}
                        className="bg-white border border-darkGray rounded-lg p-3 text-sm font-semibold flex items-center justify-center"
                    >
                        –ù–∞ –≥–ª–∞–≤–Ω—É—é
                    </button>
                </div>

            </div>
            {openSrc && (
                <VideoOverlay onClose={() => setOpenSrc(null)}>
                    <div
                        className="relative bg-black p-4 max-h-[100vh] max-w-[92vw] overflow-auto"
                        onClick={e => e.stopPropagation()}
                    >
                        {/* Close */}
                        <button
                            className="absolute top-2 right-2 z-20 text-white text-2xl"
                            onClick={() => setOpenSrc(null)}
                            aria-label="Close"
                        >
                            &times;
                        </button>

                        <video
                            ref={videoRef}
                            src={openSrc}
                            controls
                            muted
                            playsInline
                            className="block mx-auto max-h-[88vh] max-w-[88vw] object-contain"
                        />
                    </div>
                </VideoOverlay>

            )}
        </div>

    );

}

export default CartScreenshotPage;
