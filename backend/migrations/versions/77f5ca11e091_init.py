"""init

Revision ID: 77f5ca11e091
Revises: 
Create Date: 2025-03-26 16:21:44.980861

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '77f5ca11e091'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('USER', 'MODERATOR', name='userrole').create(op.get_bind())
    sa.Enum('CREATED', 'ACTIVE', 'DISABLED', name='productstatus').create(op.get_bind())
    sa.Enum('AFTER_REVIEW', 'AFTER_DELIVERY', 'ON_15TH_DAY', name='payouttime').create(op.get_bind())
    sa.Enum('WOMEN', 'MEN', 'SHOES', 'KIDS', 'HOME', 'NEW_YEAR', 'BEAUTY', 'ACCESSORIES', 'ELECTRONICS', 'TOYS', 'FURNITURE', 'ADULT', 'APPLIANCES', 'PETS', 'SPORTS', 'AUTO', 'JEWELRY', 'REPAIR', 'GARDEN', 'HEALTH', 'STATIONERY', name='category').create(op.get_bind())
    op.create_table('users',
    sa.Column('telegram_id', sa.BigInteger(), nullable=True),
    sa.Column('nickname', sa.String(), nullable=True),
    sa.Column('role', postgresql.ENUM('USER', 'MODERATOR', name='userrole', create_type=False), nullable=False),
    sa.Column('is_banned', sa.Boolean(), nullable=False),
    sa.Column('is_seller', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_id')
    )
    op.create_table('products',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('brand', sa.String(), nullable=False),
    sa.Column('article', sa.String(), nullable=False),
    sa.Column('category', postgresql.ENUM('WOMEN', 'MEN', 'SHOES', 'KIDS', 'HOME', 'NEW_YEAR', 'BEAUTY', 'ACCESSORIES', 'ELECTRONICS', 'TOYS', 'FURNITURE', 'ADULT', 'APPLIANCES', 'PETS', 'SPORTS', 'AUTO', 'JEWELRY', 'REPAIR', 'GARDEN', 'HEALTH', 'STATIONERY', name='category', create_type=False), nullable=False),
    sa.Column('key_word', sa.String(), nullable=False),
    sa.Column('general_repurchases', sa.Integer(), nullable=False),
    sa.Column('daily_repurchases', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('wb_price', sa.Float(), nullable=False),
    sa.Column('tg', sa.String(), nullable=False),
    sa.Column('payment_time', postgresql.ENUM('AFTER_REVIEW', 'AFTER_DELIVERY', 'ON_15TH_DAY', name='payouttime', create_type=False), nullable=False),
    sa.Column('review_requirements', sa.String(), nullable=False),
    sa.Column('image_path', sa.String(), nullable=True),
    sa.Column('seller_id', sa.UUID(), nullable=False),
    sa.Column('status', postgresql.ENUM('CREATED', 'ACTIVE', 'DISABLED', name='productstatus', create_type=False), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('article')
    )
    op.create_table('moderator_reviews',
    sa.Column('moderator_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('comment', sa.String(), nullable=False),
    sa.Column('status_before', postgresql.ENUM('CREATED', 'ACTIVE', 'DISABLED', name='productstatus', create_type=False), nullable=False),
    sa.Column('status_after', postgresql.ENUM('CREATED', 'ACTIVE', 'DISABLED', name='productstatus', create_type=False), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['moderator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('seller_id', sa.UUID(), nullable=False),
    sa.Column('step', sa.Integer(), nullable=False),
    sa.Column('search_screenshot_path', sa.String(), nullable=True),
    sa.Column('cart_screenshot_path', sa.String(), nullable=True),
    sa.Column('card_number', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('bank', sa.String(), nullable=True),
    sa.Column('final_cart_screenshot_path', sa.String(), nullable=True),
    sa.Column('delivery_screenshot_path', sa.String(), nullable=True),
    sa.Column('barcodes_screenshot_path', sa.String(), nullable=True),
    sa.Column('review_screenshot_path', sa.String(), nullable=True),
    sa.Column('receipt_screenshot_path', sa.String(), nullable=True),
    sa.Column('receipt_number', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reviews',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reviews')
    op.drop_table('orders')
    op.drop_table('moderator_reviews')
    op.drop_table('products')
    op.drop_table('users')
    sa.Enum('WOMEN', 'MEN', 'SHOES', 'KIDS', 'HOME', 'NEW_YEAR', 'BEAUTY', 'ACCESSORIES', 'ELECTRONICS', 'TOYS', 'FURNITURE', 'ADULT', 'APPLIANCES', 'PETS', 'SPORTS', 'AUTO', 'JEWELRY', 'REPAIR', 'GARDEN', 'HEALTH', 'STATIONERY', name='category').drop(op.get_bind())
    sa.Enum('AFTER_REVIEW', 'AFTER_DELIVERY', 'ON_15TH_DAY', name='payouttime').drop(op.get_bind())
    sa.Enum('CREATED', 'ACTIVE', 'DISABLED', name='productstatus').drop(op.get_bind())
    sa.Enum('USER', 'MODERATOR', name='userrole').drop(op.get_bind())
    # ### end Alembic commands ###
